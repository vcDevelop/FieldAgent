// Generated by view binder compiler. Do not edit!
package com.example.fieldagent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fieldagent.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView ContactPersonNumber;

  @NonNull
  public final ImageButton Delete;

  @NonNull
  public final Button Paymentdash;

  @NonNull
  public final Button ReimburseDetails;

  @NonNull
  public final TextView Status;

  @NonNull
  public final TextView custName;

  @NonNull
  public final TextView instituteName;

  private ListItemBinding(@NonNull MaterialCardView rootView, @NonNull TextView ContactPersonNumber,
      @NonNull ImageButton Delete, @NonNull Button Paymentdash, @NonNull Button ReimburseDetails,
      @NonNull TextView Status, @NonNull TextView custName, @NonNull TextView instituteName) {
    this.rootView = rootView;
    this.ContactPersonNumber = ContactPersonNumber;
    this.Delete = Delete;
    this.Paymentdash = Paymentdash;
    this.ReimburseDetails = ReimburseDetails;
    this.Status = Status;
    this.custName = custName;
    this.instituteName = instituteName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Contact_person_Number;
      TextView ContactPersonNumber = ViewBindings.findChildViewById(rootView, id);
      if (ContactPersonNumber == null) {
        break missingId;
      }

      id = R.id.Delete;
      ImageButton Delete = ViewBindings.findChildViewById(rootView, id);
      if (Delete == null) {
        break missingId;
      }

      id = R.id.Paymentdash;
      Button Paymentdash = ViewBindings.findChildViewById(rootView, id);
      if (Paymentdash == null) {
        break missingId;
      }

      id = R.id.ReimburseDetails;
      Button ReimburseDetails = ViewBindings.findChildViewById(rootView, id);
      if (ReimburseDetails == null) {
        break missingId;
      }

      id = R.id.Status;
      TextView Status = ViewBindings.findChildViewById(rootView, id);
      if (Status == null) {
        break missingId;
      }

      id = R.id.cust_name;
      TextView custName = ViewBindings.findChildViewById(rootView, id);
      if (custName == null) {
        break missingId;
      }

      id = R.id.institute_name;
      TextView instituteName = ViewBindings.findChildViewById(rootView, id);
      if (instituteName == null) {
        break missingId;
      }

      return new ListItemBinding((MaterialCardView) rootView, ContactPersonNumber, Delete,
          Paymentdash, ReimburseDetails, Status, custName, instituteName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
