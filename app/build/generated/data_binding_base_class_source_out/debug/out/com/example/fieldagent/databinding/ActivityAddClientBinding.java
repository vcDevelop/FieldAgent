// Generated by view binder compiler. Do not edit!
package com.example.fieldagent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fieldagent.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddClientBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText Address;

  @NonNull
  public final TextView Addressmatching;

  @NonNull
  public final TextInputEditText AgeOfProperty;

  @NonNull
  public final TextInputEditText Amenities;

  @NonNull
  public final TextInputEditText Anynegativetothelocality;

  @NonNull
  public final TextInputEditText Colony;

  @NonNull
  public final TextInputEditText ContactPersonName;

  @NonNull
  public final TextInputEditText ContactPersonNumber;

  @NonNull
  public final TextInputEditText East;

  @NonNull
  public final TextView JurisdictionText;

  @NonNull
  public final TextInputEditText NearestBusStop;

  @NonNull
  public final TextInputEditText NearestHospital;

  @NonNull
  public final TextInputEditText NearestMetroStation;

  @NonNull
  public final TextInputEditText NearestRailwayStation;

  @NonNull
  public final TextInputEditText NeighborhoodType;

  @NonNull
  public final TextInputEditText North;

  @NonNull
  public final TextInputEditText OccupiedBy;

  @NonNull
  public final TextInputEditText OccupiedSince;

  @NonNull
  public final TextInputEditText Relationship;

  @NonNull
  public final TextView SecondDropdownText;

  @NonNull
  public final TextView SiteAccesstext;

  @NonNull
  public final TextInputEditText South;

  @NonNull
  public final Spinner Statusofoccupancy;

  @NonNull
  public final TextInputEditText West;

  @NonNull
  public final Button button;

  @NonNull
  public final TextView cityLabel;

  @NonNull
  public final Spinner citySpinner;

  @NonNull
  public final Spinner custLoantype;

  @NonNull
  public final TextView custLoantypeText;

  @NonNull
  public final TextInputEditText custName;

  @NonNull
  public final CardView group1CardView;

  @NonNull
  public final LinearLayout group1Layout;

  @NonNull
  public final CardView group2CardView;

  @NonNull
  public final LinearLayout group2Layout;

  @NonNull
  public final CardView group3CardView;

  @NonNull
  public final LinearLayout group3Layout;

  @NonNull
  public final CardView group4CardView;

  @NonNull
  public final LinearLayout group4Layout;

  @NonNull
  public final CardView group5CardView;

  @NonNull
  public final LinearLayout group5Layout;

  @NonNull
  public final CardView group6CardView;

  @NonNull
  public final LinearLayout group6Layout;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextInputEditText instituteName;

  @NonNull
  public final Spinner jurisdictionSpinner;

  @NonNull
  public final TextInputEditText landmark;

  @NonNull
  public final LinearLayout layoutJurisdiction;

  @NonNull
  public final LinearLayout layoutSecondDropdown;

  @NonNull
  public final TextView levelOfMaintain;

  @NonNull
  public final Spinner levelofmaintain;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextInputEditText locality;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button prevButton;

  @NonNull
  public final TextInputEditText propertyAddressAsPerSite;

  @NonNull
  public final Spinner secondDropdownSpinner;

  @NonNull
  public final Spinner siteAccess;

  @NonNull
  public final TextView siteVisitDate;

  @NonNull
  public final TextView statusoccupancy;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TextInputLayout textInputLayoutAge;

  @NonNull
  public final TextInputLayout textInputLayoutAmenities;

  @NonNull
  public final TextInputLayout textInputLayoutAnyNegativeToLocality;

  @NonNull
  public final TextInputLayout textInputLayoutColony;

  @NonNull
  public final TextInputLayout textInputLayoutContactPersonName;

  @NonNull
  public final TextInputLayout textInputLayoutContactPersonNumber;

  @NonNull
  public final TextInputLayout textInputLayoutCustName;

  @NonNull
  public final TextInputLayout textInputLayoutEast;

  @NonNull
  public final TextInputLayout textInputLayoutInstituteName;

  @NonNull
  public final TextInputLayout textInputLayoutLandmark;

  @NonNull
  public final TextInputLayout textInputLayoutLocality;

  @NonNull
  public final TextInputLayout textInputLayoutNearestBusStop;

  @NonNull
  public final TextInputLayout textInputLayoutNearestHospital;

  @NonNull
  public final TextInputLayout textInputLayoutNearestMetroStation;

  @NonNull
  public final TextInputLayout textInputLayoutNeighborhoodType;

  @NonNull
  public final TextInputLayout textInputLayoutNorth;

  @NonNull
  public final TextInputLayout textInputLayoutOccupiedBy;

  @NonNull
  public final TextInputLayout textInputLayoutOccupiedSince;

  @NonNull
  public final TextInputLayout textInputLayoutPropertyAddress;

  @NonNull
  public final TextInputLayout textInputLayoutPropertyAddressAsPerSite;

  @NonNull
  public final TextInputLayout textInputLayoutRailwayStation;

  @NonNull
  public final TextInputLayout textInputLayoutRelationship;

  @NonNull
  public final TextInputLayout textInputLayoutSouth;

  @NonNull
  public final TextInputLayout textInputLayoutWest;

  @NonNull
  public final TextInputLayout textInputLayoutWidthOfRoad;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextInputEditText widthofroad;

  @NonNull
  public final Spinner yesNoSpinner;

  private ActivityAddClientBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText Address, @NonNull TextView Addressmatching,
      @NonNull TextInputEditText AgeOfProperty, @NonNull TextInputEditText Amenities,
      @NonNull TextInputEditText Anynegativetothelocality, @NonNull TextInputEditText Colony,
      @NonNull TextInputEditText ContactPersonName, @NonNull TextInputEditText ContactPersonNumber,
      @NonNull TextInputEditText East, @NonNull TextView JurisdictionText,
      @NonNull TextInputEditText NearestBusStop, @NonNull TextInputEditText NearestHospital,
      @NonNull TextInputEditText NearestMetroStation,
      @NonNull TextInputEditText NearestRailwayStation, @NonNull TextInputEditText NeighborhoodType,
      @NonNull TextInputEditText North, @NonNull TextInputEditText OccupiedBy,
      @NonNull TextInputEditText OccupiedSince, @NonNull TextInputEditText Relationship,
      @NonNull TextView SecondDropdownText, @NonNull TextView SiteAccesstext,
      @NonNull TextInputEditText South, @NonNull Spinner Statusofoccupancy,
      @NonNull TextInputEditText West, @NonNull Button button, @NonNull TextView cityLabel,
      @NonNull Spinner citySpinner, @NonNull Spinner custLoantype,
      @NonNull TextView custLoantypeText, @NonNull TextInputEditText custName,
      @NonNull CardView group1CardView, @NonNull LinearLayout group1Layout,
      @NonNull CardView group2CardView, @NonNull LinearLayout group2Layout,
      @NonNull CardView group3CardView, @NonNull LinearLayout group3Layout,
      @NonNull CardView group4CardView, @NonNull LinearLayout group4Layout,
      @NonNull CardView group5CardView, @NonNull LinearLayout group5Layout,
      @NonNull CardView group6CardView, @NonNull LinearLayout group6Layout,
      @NonNull ImageView imageView2, @NonNull TextInputEditText instituteName,
      @NonNull Spinner jurisdictionSpinner, @NonNull TextInputEditText landmark,
      @NonNull LinearLayout layoutJurisdiction, @NonNull LinearLayout layoutSecondDropdown,
      @NonNull TextView levelOfMaintain, @NonNull Spinner levelofmaintain,
      @NonNull LinearLayout linearLayout2, @NonNull TextInputEditText locality,
      @NonNull Button nextButton, @NonNull Button prevButton,
      @NonNull TextInputEditText propertyAddressAsPerSite, @NonNull Spinner secondDropdownSpinner,
      @NonNull Spinner siteAccess, @NonNull TextView siteVisitDate,
      @NonNull TextView statusoccupancy, @NonNull Button submitButton,
      @NonNull TextInputLayout textInputLayoutAge,
      @NonNull TextInputLayout textInputLayoutAmenities,
      @NonNull TextInputLayout textInputLayoutAnyNegativeToLocality,
      @NonNull TextInputLayout textInputLayoutColony,
      @NonNull TextInputLayout textInputLayoutContactPersonName,
      @NonNull TextInputLayout textInputLayoutContactPersonNumber,
      @NonNull TextInputLayout textInputLayoutCustName,
      @NonNull TextInputLayout textInputLayoutEast,
      @NonNull TextInputLayout textInputLayoutInstituteName,
      @NonNull TextInputLayout textInputLayoutLandmark,
      @NonNull TextInputLayout textInputLayoutLocality,
      @NonNull TextInputLayout textInputLayoutNearestBusStop,
      @NonNull TextInputLayout textInputLayoutNearestHospital,
      @NonNull TextInputLayout textInputLayoutNearestMetroStation,
      @NonNull TextInputLayout textInputLayoutNeighborhoodType,
      @NonNull TextInputLayout textInputLayoutNorth,
      @NonNull TextInputLayout textInputLayoutOccupiedBy,
      @NonNull TextInputLayout textInputLayoutOccupiedSince,
      @NonNull TextInputLayout textInputLayoutPropertyAddress,
      @NonNull TextInputLayout textInputLayoutPropertyAddressAsPerSite,
      @NonNull TextInputLayout textInputLayoutRailwayStation,
      @NonNull TextInputLayout textInputLayoutRelationship,
      @NonNull TextInputLayout textInputLayoutSouth, @NonNull TextInputLayout textInputLayoutWest,
      @NonNull TextInputLayout textInputLayoutWidthOfRoad, @NonNull TextView textView1,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView6, @NonNull TextView textview2,
      @NonNull TextInputEditText widthofroad, @NonNull Spinner yesNoSpinner) {
    this.rootView = rootView;
    this.Address = Address;
    this.Addressmatching = Addressmatching;
    this.AgeOfProperty = AgeOfProperty;
    this.Amenities = Amenities;
    this.Anynegativetothelocality = Anynegativetothelocality;
    this.Colony = Colony;
    this.ContactPersonName = ContactPersonName;
    this.ContactPersonNumber = ContactPersonNumber;
    this.East = East;
    this.JurisdictionText = JurisdictionText;
    this.NearestBusStop = NearestBusStop;
    this.NearestHospital = NearestHospital;
    this.NearestMetroStation = NearestMetroStation;
    this.NearestRailwayStation = NearestRailwayStation;
    this.NeighborhoodType = NeighborhoodType;
    this.North = North;
    this.OccupiedBy = OccupiedBy;
    this.OccupiedSince = OccupiedSince;
    this.Relationship = Relationship;
    this.SecondDropdownText = SecondDropdownText;
    this.SiteAccesstext = SiteAccesstext;
    this.South = South;
    this.Statusofoccupancy = Statusofoccupancy;
    this.West = West;
    this.button = button;
    this.cityLabel = cityLabel;
    this.citySpinner = citySpinner;
    this.custLoantype = custLoantype;
    this.custLoantypeText = custLoantypeText;
    this.custName = custName;
    this.group1CardView = group1CardView;
    this.group1Layout = group1Layout;
    this.group2CardView = group2CardView;
    this.group2Layout = group2Layout;
    this.group3CardView = group3CardView;
    this.group3Layout = group3Layout;
    this.group4CardView = group4CardView;
    this.group4Layout = group4Layout;
    this.group5CardView = group5CardView;
    this.group5Layout = group5Layout;
    this.group6CardView = group6CardView;
    this.group6Layout = group6Layout;
    this.imageView2 = imageView2;
    this.instituteName = instituteName;
    this.jurisdictionSpinner = jurisdictionSpinner;
    this.landmark = landmark;
    this.layoutJurisdiction = layoutJurisdiction;
    this.layoutSecondDropdown = layoutSecondDropdown;
    this.levelOfMaintain = levelOfMaintain;
    this.levelofmaintain = levelofmaintain;
    this.linearLayout2 = linearLayout2;
    this.locality = locality;
    this.nextButton = nextButton;
    this.prevButton = prevButton;
    this.propertyAddressAsPerSite = propertyAddressAsPerSite;
    this.secondDropdownSpinner = secondDropdownSpinner;
    this.siteAccess = siteAccess;
    this.siteVisitDate = siteVisitDate;
    this.statusoccupancy = statusoccupancy;
    this.submitButton = submitButton;
    this.textInputLayoutAge = textInputLayoutAge;
    this.textInputLayoutAmenities = textInputLayoutAmenities;
    this.textInputLayoutAnyNegativeToLocality = textInputLayoutAnyNegativeToLocality;
    this.textInputLayoutColony = textInputLayoutColony;
    this.textInputLayoutContactPersonName = textInputLayoutContactPersonName;
    this.textInputLayoutContactPersonNumber = textInputLayoutContactPersonNumber;
    this.textInputLayoutCustName = textInputLayoutCustName;
    this.textInputLayoutEast = textInputLayoutEast;
    this.textInputLayoutInstituteName = textInputLayoutInstituteName;
    this.textInputLayoutLandmark = textInputLayoutLandmark;
    this.textInputLayoutLocality = textInputLayoutLocality;
    this.textInputLayoutNearestBusStop = textInputLayoutNearestBusStop;
    this.textInputLayoutNearestHospital = textInputLayoutNearestHospital;
    this.textInputLayoutNearestMetroStation = textInputLayoutNearestMetroStation;
    this.textInputLayoutNeighborhoodType = textInputLayoutNeighborhoodType;
    this.textInputLayoutNorth = textInputLayoutNorth;
    this.textInputLayoutOccupiedBy = textInputLayoutOccupiedBy;
    this.textInputLayoutOccupiedSince = textInputLayoutOccupiedSince;
    this.textInputLayoutPropertyAddress = textInputLayoutPropertyAddress;
    this.textInputLayoutPropertyAddressAsPerSite = textInputLayoutPropertyAddressAsPerSite;
    this.textInputLayoutRailwayStation = textInputLayoutRailwayStation;
    this.textInputLayoutRelationship = textInputLayoutRelationship;
    this.textInputLayoutSouth = textInputLayoutSouth;
    this.textInputLayoutWest = textInputLayoutWest;
    this.textInputLayoutWidthOfRoad = textInputLayoutWidthOfRoad;
    this.textView1 = textView1;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textview2 = textview2;
    this.widthofroad = widthofroad;
    this.yesNoSpinner = yesNoSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddClientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddClientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_client, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddClientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Address;
      TextInputEditText Address = ViewBindings.findChildViewById(rootView, id);
      if (Address == null) {
        break missingId;
      }

      id = R.id.Addressmatching;
      TextView Addressmatching = ViewBindings.findChildViewById(rootView, id);
      if (Addressmatching == null) {
        break missingId;
      }

      id = R.id.Age_of_Property;
      TextInputEditText AgeOfProperty = ViewBindings.findChildViewById(rootView, id);
      if (AgeOfProperty == null) {
        break missingId;
      }

      id = R.id.Amenities;
      TextInputEditText Amenities = ViewBindings.findChildViewById(rootView, id);
      if (Amenities == null) {
        break missingId;
      }

      id = R.id.Anynegativetothelocality;
      TextInputEditText Anynegativetothelocality = ViewBindings.findChildViewById(rootView, id);
      if (Anynegativetothelocality == null) {
        break missingId;
      }

      id = R.id.Colony;
      TextInputEditText Colony = ViewBindings.findChildViewById(rootView, id);
      if (Colony == null) {
        break missingId;
      }

      id = R.id.Contact_person_name;
      TextInputEditText ContactPersonName = ViewBindings.findChildViewById(rootView, id);
      if (ContactPersonName == null) {
        break missingId;
      }

      id = R.id.Contact_person_Number;
      TextInputEditText ContactPersonNumber = ViewBindings.findChildViewById(rootView, id);
      if (ContactPersonNumber == null) {
        break missingId;
      }

      id = R.id.East;
      TextInputEditText East = ViewBindings.findChildViewById(rootView, id);
      if (East == null) {
        break missingId;
      }

      id = R.id.Jurisdiction_text;
      TextView JurisdictionText = ViewBindings.findChildViewById(rootView, id);
      if (JurisdictionText == null) {
        break missingId;
      }

      id = R.id.NearestBusStop;
      TextInputEditText NearestBusStop = ViewBindings.findChildViewById(rootView, id);
      if (NearestBusStop == null) {
        break missingId;
      }

      id = R.id.NearestHospital;
      TextInputEditText NearestHospital = ViewBindings.findChildViewById(rootView, id);
      if (NearestHospital == null) {
        break missingId;
      }

      id = R.id.NearestMetroStation;
      TextInputEditText NearestMetroStation = ViewBindings.findChildViewById(rootView, id);
      if (NearestMetroStation == null) {
        break missingId;
      }

      id = R.id.NearestRailwayStation;
      TextInputEditText NearestRailwayStation = ViewBindings.findChildViewById(rootView, id);
      if (NearestRailwayStation == null) {
        break missingId;
      }

      id = R.id.NeighborhoodType;
      TextInputEditText NeighborhoodType = ViewBindings.findChildViewById(rootView, id);
      if (NeighborhoodType == null) {
        break missingId;
      }

      id = R.id.North;
      TextInputEditText North = ViewBindings.findChildViewById(rootView, id);
      if (North == null) {
        break missingId;
      }

      id = R.id.Occupied_by;
      TextInputEditText OccupiedBy = ViewBindings.findChildViewById(rootView, id);
      if (OccupiedBy == null) {
        break missingId;
      }

      id = R.id.OccupiedSince;
      TextInputEditText OccupiedSince = ViewBindings.findChildViewById(rootView, id);
      if (OccupiedSince == null) {
        break missingId;
      }

      id = R.id.Relationship;
      TextInputEditText Relationship = ViewBindings.findChildViewById(rootView, id);
      if (Relationship == null) {
        break missingId;
      }

      id = R.id.SecondDropdown_text;
      TextView SecondDropdownText = ViewBindings.findChildViewById(rootView, id);
      if (SecondDropdownText == null) {
        break missingId;
      }

      id = R.id.SiteAccesstext;
      TextView SiteAccesstext = ViewBindings.findChildViewById(rootView, id);
      if (SiteAccesstext == null) {
        break missingId;
      }

      id = R.id.South;
      TextInputEditText South = ViewBindings.findChildViewById(rootView, id);
      if (South == null) {
        break missingId;
      }

      id = R.id.Statusofoccupancy;
      Spinner Statusofoccupancy = ViewBindings.findChildViewById(rootView, id);
      if (Statusofoccupancy == null) {
        break missingId;
      }

      id = R.id.West;
      TextInputEditText West = ViewBindings.findChildViewById(rootView, id);
      if (West == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.city_label;
      TextView cityLabel = ViewBindings.findChildViewById(rootView, id);
      if (cityLabel == null) {
        break missingId;
      }

      id = R.id.city_spinner;
      Spinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.cust_loantype;
      Spinner custLoantype = ViewBindings.findChildViewById(rootView, id);
      if (custLoantype == null) {
        break missingId;
      }

      id = R.id.cust_loantype_text;
      TextView custLoantypeText = ViewBindings.findChildViewById(rootView, id);
      if (custLoantypeText == null) {
        break missingId;
      }

      id = R.id.cust_name;
      TextInputEditText custName = ViewBindings.findChildViewById(rootView, id);
      if (custName == null) {
        break missingId;
      }

      id = R.id.group1CardView;
      CardView group1CardView = ViewBindings.findChildViewById(rootView, id);
      if (group1CardView == null) {
        break missingId;
      }

      id = R.id.group1Layout;
      LinearLayout group1Layout = ViewBindings.findChildViewById(rootView, id);
      if (group1Layout == null) {
        break missingId;
      }

      id = R.id.group2CardView;
      CardView group2CardView = ViewBindings.findChildViewById(rootView, id);
      if (group2CardView == null) {
        break missingId;
      }

      id = R.id.group2Layout;
      LinearLayout group2Layout = ViewBindings.findChildViewById(rootView, id);
      if (group2Layout == null) {
        break missingId;
      }

      id = R.id.group3CardView;
      CardView group3CardView = ViewBindings.findChildViewById(rootView, id);
      if (group3CardView == null) {
        break missingId;
      }

      id = R.id.group3Layout;
      LinearLayout group3Layout = ViewBindings.findChildViewById(rootView, id);
      if (group3Layout == null) {
        break missingId;
      }

      id = R.id.group4CardView;
      CardView group4CardView = ViewBindings.findChildViewById(rootView, id);
      if (group4CardView == null) {
        break missingId;
      }

      id = R.id.group4Layout;
      LinearLayout group4Layout = ViewBindings.findChildViewById(rootView, id);
      if (group4Layout == null) {
        break missingId;
      }

      id = R.id.group5CardView;
      CardView group5CardView = ViewBindings.findChildViewById(rootView, id);
      if (group5CardView == null) {
        break missingId;
      }

      id = R.id.group5Layout;
      LinearLayout group5Layout = ViewBindings.findChildViewById(rootView, id);
      if (group5Layout == null) {
        break missingId;
      }

      id = R.id.group6CardView;
      CardView group6CardView = ViewBindings.findChildViewById(rootView, id);
      if (group6CardView == null) {
        break missingId;
      }

      id = R.id.group6Layout;
      LinearLayout group6Layout = ViewBindings.findChildViewById(rootView, id);
      if (group6Layout == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.institute_name;
      TextInputEditText instituteName = ViewBindings.findChildViewById(rootView, id);
      if (instituteName == null) {
        break missingId;
      }

      id = R.id.jurisdiction_spinner;
      Spinner jurisdictionSpinner = ViewBindings.findChildViewById(rootView, id);
      if (jurisdictionSpinner == null) {
        break missingId;
      }

      id = R.id.landmark;
      TextInputEditText landmark = ViewBindings.findChildViewById(rootView, id);
      if (landmark == null) {
        break missingId;
      }

      id = R.id.layout_jurisdiction;
      LinearLayout layoutJurisdiction = ViewBindings.findChildViewById(rootView, id);
      if (layoutJurisdiction == null) {
        break missingId;
      }

      id = R.id.layout_second_dropdown;
      LinearLayout layoutSecondDropdown = ViewBindings.findChildViewById(rootView, id);
      if (layoutSecondDropdown == null) {
        break missingId;
      }

      id = R.id.level_of_maintain;
      TextView levelOfMaintain = ViewBindings.findChildViewById(rootView, id);
      if (levelOfMaintain == null) {
        break missingId;
      }

      id = R.id.levelofmaintain;
      Spinner levelofmaintain = ViewBindings.findChildViewById(rootView, id);
      if (levelofmaintain == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.locality;
      TextInputEditText locality = ViewBindings.findChildViewById(rootView, id);
      if (locality == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.prevButton;
      Button prevButton = ViewBindings.findChildViewById(rootView, id);
      if (prevButton == null) {
        break missingId;
      }

      id = R.id.property_address_as_per_site;
      TextInputEditText propertyAddressAsPerSite = ViewBindings.findChildViewById(rootView, id);
      if (propertyAddressAsPerSite == null) {
        break missingId;
      }

      id = R.id.second_dropdown_spinner;
      Spinner secondDropdownSpinner = ViewBindings.findChildViewById(rootView, id);
      if (secondDropdownSpinner == null) {
        break missingId;
      }

      id = R.id.site_access;
      Spinner siteAccess = ViewBindings.findChildViewById(rootView, id);
      if (siteAccess == null) {
        break missingId;
      }

      id = R.id.site_visit_Date;
      TextView siteVisitDate = ViewBindings.findChildViewById(rootView, id);
      if (siteVisitDate == null) {
        break missingId;
      }

      id = R.id.statusoccupancy;
      TextView statusoccupancy = ViewBindings.findChildViewById(rootView, id);
      if (statusoccupancy == null) {
        break missingId;
      }

      id = R.id.submit_button;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAge;
      TextInputLayout textInputLayoutAge = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutAge == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAmenities;
      TextInputLayout textInputLayoutAmenities = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutAmenities == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAnyNegativeToLocality;
      TextInputLayout textInputLayoutAnyNegativeToLocality = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutAnyNegativeToLocality == null) {
        break missingId;
      }

      id = R.id.textInputLayoutColony;
      TextInputLayout textInputLayoutColony = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutColony == null) {
        break missingId;
      }

      id = R.id.textInputLayoutContactPersonName;
      TextInputLayout textInputLayoutContactPersonName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutContactPersonName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutContactPersonNumber;
      TextInputLayout textInputLayoutContactPersonNumber = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutContactPersonNumber == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCustName;
      TextInputLayout textInputLayoutCustName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutCustName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutEast;
      TextInputLayout textInputLayoutEast = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutEast == null) {
        break missingId;
      }

      id = R.id.textInputLayoutInstituteName;
      TextInputLayout textInputLayoutInstituteName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutInstituteName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutLandmark;
      TextInputLayout textInputLayoutLandmark = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutLandmark == null) {
        break missingId;
      }

      id = R.id.textInputLayoutLocality;
      TextInputLayout textInputLayoutLocality = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutLocality == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNearestBusStop;
      TextInputLayout textInputLayoutNearestBusStop = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNearestBusStop == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNearestHospital;
      TextInputLayout textInputLayoutNearestHospital = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNearestHospital == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNearestMetroStation;
      TextInputLayout textInputLayoutNearestMetroStation = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNearestMetroStation == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNeighborhoodType;
      TextInputLayout textInputLayoutNeighborhoodType = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNeighborhoodType == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNorth;
      TextInputLayout textInputLayoutNorth = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNorth == null) {
        break missingId;
      }

      id = R.id.textInputLayoutOccupiedBy;
      TextInputLayout textInputLayoutOccupiedBy = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutOccupiedBy == null) {
        break missingId;
      }

      id = R.id.textInputLayoutOccupiedSince;
      TextInputLayout textInputLayoutOccupiedSince = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutOccupiedSince == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPropertyAddress;
      TextInputLayout textInputLayoutPropertyAddress = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPropertyAddress == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPropertyAddressAsPerSite;
      TextInputLayout textInputLayoutPropertyAddressAsPerSite = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPropertyAddressAsPerSite == null) {
        break missingId;
      }

      id = R.id.textInputLayoutRailwayStation;
      TextInputLayout textInputLayoutRailwayStation = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutRailwayStation == null) {
        break missingId;
      }

      id = R.id.textInputLayoutRelationship;
      TextInputLayout textInputLayoutRelationship = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutRelationship == null) {
        break missingId;
      }

      id = R.id.textInputLayoutSouth;
      TextInputLayout textInputLayoutSouth = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutSouth == null) {
        break missingId;
      }

      id = R.id.textInputLayoutWest;
      TextInputLayout textInputLayoutWest = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutWest == null) {
        break missingId;
      }

      id = R.id.textInputLayoutWidthOfRoad;
      TextInputLayout textInputLayoutWidthOfRoad = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutWidthOfRoad == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.widthofroad;
      TextInputEditText widthofroad = ViewBindings.findChildViewById(rootView, id);
      if (widthofroad == null) {
        break missingId;
      }

      id = R.id.yes_no_spinner;
      Spinner yesNoSpinner = ViewBindings.findChildViewById(rootView, id);
      if (yesNoSpinner == null) {
        break missingId;
      }

      return new ActivityAddClientBinding((ConstraintLayout) rootView, Address, Addressmatching,
          AgeOfProperty, Amenities, Anynegativetothelocality, Colony, ContactPersonName,
          ContactPersonNumber, East, JurisdictionText, NearestBusStop, NearestHospital,
          NearestMetroStation, NearestRailwayStation, NeighborhoodType, North, OccupiedBy,
          OccupiedSince, Relationship, SecondDropdownText, SiteAccesstext, South, Statusofoccupancy,
          West, button, cityLabel, citySpinner, custLoantype, custLoantypeText, custName,
          group1CardView, group1Layout, group2CardView, group2Layout, group3CardView, group3Layout,
          group4CardView, group4Layout, group5CardView, group5Layout, group6CardView, group6Layout,
          imageView2, instituteName, jurisdictionSpinner, landmark, layoutJurisdiction,
          layoutSecondDropdown, levelOfMaintain, levelofmaintain, linearLayout2, locality,
          nextButton, prevButton, propertyAddressAsPerSite, secondDropdownSpinner, siteAccess,
          siteVisitDate, statusoccupancy, submitButton, textInputLayoutAge,
          textInputLayoutAmenities, textInputLayoutAnyNegativeToLocality, textInputLayoutColony,
          textInputLayoutContactPersonName, textInputLayoutContactPersonNumber,
          textInputLayoutCustName, textInputLayoutEast, textInputLayoutInstituteName,
          textInputLayoutLandmark, textInputLayoutLocality, textInputLayoutNearestBusStop,
          textInputLayoutNearestHospital, textInputLayoutNearestMetroStation,
          textInputLayoutNeighborhoodType, textInputLayoutNorth, textInputLayoutOccupiedBy,
          textInputLayoutOccupiedSince, textInputLayoutPropertyAddress,
          textInputLayoutPropertyAddressAsPerSite, textInputLayoutRailwayStation,
          textInputLayoutRelationship, textInputLayoutSouth, textInputLayoutWest,
          textInputLayoutWidthOfRoad, textView1, textView3, textView4, textView5, textView6,
          textview2, widthofroad, yesNoSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
